import React, { useState } from 'react';
import { Search, MapPin, Clock, Building, ChevronRight, Filter, Star, Briefcase, DollarSign, Calendar, Users } from 'lucide-react';

const JobsPage = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCity, setSelectedCity] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('');
  const [selectedSalary, setSelectedSalary] = useState('');
  const [selectedType, setSelectedType] = useState('');
  const [showFilters, setShowFilters] = useState(false);

  const jobCategories = [
    '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
    '–ü—Ä–æ–¥–∞–∂–∏',
    'IT –∏ Digital',
    '–õ–æ–≥–∏—Å—Ç–∏–∫–∞',
    '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
    '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ —Ä–µ–∫–ª–∞–º–∞',
    '–ë–∞–Ω–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã',
    '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    '–ú–µ–¥–∏—Ü–∏–Ω–∞',
    '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ',
    '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ'
  ];

  const cities = [
    '–í—Å–µ –≥–æ—Ä–æ–¥–∞',
    '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
    '–ö–æ—Å—Ç–∞–Ω–∞–π',
    '–ê–∫—Ç–∞—É',
    '–ü–∞–≤–ª–æ–¥–∞—Ä',
    '–ö–æ–∫—à–µ—Ç–∞—É',
    '–†—É–¥–Ω—ã–π',
    '–ê—Ç—ã—Ä–∞—É'
  ];

  const salaryRanges = [
    '–õ—é–±–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞',
    '–î–æ 150,000 ‚Ç∏',
    '150,000 - 250,000 ‚Ç∏',
    '250,000 - 400,000 ‚Ç∏',
    '400,000 - 600,000 ‚Ç∏',
    '–û—Ç 600,000 ‚Ç∏'
  ];

  const jobTypes = [
    '–í—Å–µ —Ç–∏–ø—ã',
    '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
    '–ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
    '–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞'
  ];

  const jobs = [
    {
      id: 1,
      title: '–ü—Ä–æ–¥–∞–≤–µ—Ü-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
      company: 'Kaspi Red',
      logo: 'üõçÔ∏è',
      salary: '150,000 - 200,000 ‚Ç∏',
      location: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      description: '–ò—â–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –≤ –º–∞–≥–∞–∑–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏. –û–ø—ã—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è.',
      requirements: ['–û–ø—ã—Ç –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –æ—Ç 1 –≥–æ–¥–∞', '–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å', '–ó–Ω–∞–Ω–∏–µ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞'],
      postedDate: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
      isHot: true,
      rating: 4.5,
      applicants: 23
    },
    {
      id: 2,
      title: '–ö—É—Ä—å–µ—Ä –Ω–∞ –ª–∏—á–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ',
      company: 'Glovo Kazakhstan',
      logo: 'üöó',
      salary: '200,000 - 300,000 ‚Ç∏',
      location: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
      type: '–°–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫',
      description: '–î–æ—Å—Ç–∞–≤–ª—è–π –∑–∞–∫–∞–∑—ã –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –æ—Ç 200,000 —Ç–µ–Ω–≥–µ –≤ –º–µ—Å—è—Ü.',
      requirements: ['–ù–∞–ª–∏—á–∏–µ –ª–∏—á–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞', '–ü—Ä–∞–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B', '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å'],
      postedDate: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
      isHot: true,
      rating: 4.2,
      applicants: 45
    },
    {
      id: 3,
      title: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–µ–ª—è',
      company: 'Hotel Plaza',
      logo: 'üè®',
      salary: '180,000 - 220,000 ‚Ç∏',
      location: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
      type: '–°–º–µ–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫',
      description: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞ —Ä–µ—Å–µ–ø—à–Ω –≤ –≥–æ—Å—Ç–∏–Ω–∏—Ü—É. –†–∞–±–æ—Ç–∞ –≤ –¥–Ω–µ–≤–Ω—ã–µ –∏ –Ω–æ—á–Ω—ã–µ —Å–º–µ–Ω—ã.',
      requirements: ['–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ —Å—Ñ–µ—Ä–µ —É—Å–ª—É–≥', '–ó–Ω–∞–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞', '–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å'],
      postedDate: '3 –¥–Ω—è –Ω–∞–∑–∞–¥',
      isHot: false,
      rating: 4.0,
      applicants: 12
    },
    {
      id: 4,
      title: 'SMM-–º–µ–Ω–µ–¥–∂–µ—Ä',
      company: 'Digital Agency KZ',
      logo: 'üì±',
      salary: '250,000 - 350,000 ‚Ç∏',
      location: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
      type: '–£–¥–∞–ª–µ–Ω–Ω–æ',
      description: '–í–µ–¥–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞. –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∑–Ω–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.',
      requirements: ['–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç', '–ó–Ω–∞–Ω–∏–µ Instagram, TikTok', '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ'],
      postedDate: '5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥',
      isHot: false,
      rating: 4.3,
      applicants: 31
    },
    {
      id: 5,
      title: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
      company: '–¢–û–û "–°–µ–≤–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"',
      logo: 'üìä',
      salary: '200,000 - 280,000 ‚Ç∏',
      location: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      description: '–í —Ä–∞—Å—Ç—É—â—É—é IT-–∫–æ–º–ø–∞–Ω–∏—é —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—ã—Ç–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä –¥–ª—è –≤–µ–¥–µ–Ω–∏—è —É—á–µ—Ç–∞.',
      requirements: ['–í—ã—Å—à–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–û–ø—ã—Ç –æ—Ç 2 –ª–µ—Ç', '–ó–Ω–∞–Ω–∏–µ 1–°'],
      postedDate: '1 –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥',
      isHot: false,
      rating: 4.1,
      applicants: 18
    },
    {
      id: 6,
      title: '–í–æ–¥–∏—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ C',
      company: '–õ–æ–≥–∏—Å—Ç–∏–∫ –ü–ª—é—Å',
      logo: 'üöõ',
      salary: '220,000 - 300,000 ‚Ç∏',
      location: '–ö–æ—Å—Ç–∞–Ω–∞–π',
      type: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å',
      description: '–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–¥–∏—Ç–µ–ª—å –Ω–∞ –≥—Ä—É–∑–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –º–µ–∂–≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–∑–æ–∫.',
      requirements: ['–ü—Ä–∞–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ C', '–û–ø—ã—Ç –æ—Ç 3 –ª–µ—Ç', '–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞–º'],
      postedDate: '4 –¥–Ω—è –Ω–∞–∑–∞–¥',
      isHot: true,
      rating: 3.9,
      applicants: 8
    }
  ];

  const filteredJobs = jobs.filter(job => {
    const matchesSearch = job.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         job.company.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCity = !selectedCity || selectedCity === '–í—Å–µ –≥–æ—Ä–æ–¥–∞' || job.location === selectedCity;
    const matchesType = !selectedType || selectedType === '–í—Å–µ —Ç–∏–ø—ã' || job.type === selectedType;
    
    return matchesSearch && matchesCity && matchesType;
  });

  return (
    <div>
      {/* Hero Section */}
      <section className="relative py-12 md:py-16 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-yellow-400/5 to-transparent">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-8">
            <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold mb-4">
              –ù–∞–π–¥–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ—á—Ç—ã –≤ 
              <span className="text-yellow-400"> –°–µ–≤–µ—Ä–Ω–æ–º –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ</span>
            </h1>
            <p className="text-lg md:text-xl text-gray-300 max-w-2xl mx-auto">
              {filteredJobs.length} –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π
            </p>
          </div>

          {/* Search and Filters */}
          <div className="max-w-6xl mx-auto">
            {/* Main Search Bar */}
            <div className="bg-white/5 backdrop-blur-sm border border-yellow-400/20 rounded-2xl p-4 md:p-6 mb-6">
              <div className="grid grid-cols-1 lg:grid-cols-4 gap-4">
                <div className="lg:col-span-2">
                  <div className="relative">
                    <Search className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                    <input
                      type="text"
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å, –∫–æ–º–ø–∞–Ω–∏—è –∏–ª–∏ –Ω–∞–≤—ã–∫..."
                      className="w-full pl-10 pr-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
                    />
                  </div>
                </div>
                
                <div>
                  <select
                    value={selectedCity}
                    onChange={(e) => setSelectedCity(e.target.value)}
                    className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
                  >
                    {cities.map(city => (
                      <option key={city} value={city}>{city}</option>
                    ))}
                  </select>
                </div>

                <div className="flex gap-2">
                  <button className="flex-1 bg-gradient-to-r from-yellow-400 to-yellow-600 text-black py-3 px-6 rounded-lg font-medium hover:from-yellow-500 hover:to-yellow-700 transition-all flex items-center justify-center">
                    <Search className="w-5 h-5 mr-2" />
                    –ù–∞–π—Ç–∏
                  </button>
                  <button
                    onClick={() => setShowFilters(!showFilters)}
                    className="px-4 py-3 bg-white/10 border border-gray-600 rounded-lg text-white hover:bg-white/15 transition-all"
                  >
                    <Filter className="w-5 h-5" />
                  </button>
                </div>
              </div>
            </div>

            {/* Extended Filters */}
            {showFilters && (
              <div className="bg-white/5 backdrop-blur-sm border border-yellow-400/20 rounded-2xl p-4 md:p-6 mb-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-300 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                    <select
                      value={selectedCategory}
                      onChange={(e) => setSelectedCategory(e.target.value)}
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-yellow-400"
                    >
                      {jobCategories.map(category => (
                        <option key={category} value={category}>{category}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-300 mb-2">–ó–∞—Ä–ø–ª–∞—Ç–∞</label>
                    <select
                      value={selectedSalary}
                      onChange={(e) => setSelectedSalary(e.target.value)}
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-yellow-400"
                    >
                      {salaryRanges.map(salary => (
                        <option key={salary} value={salary}>{salary}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-300 mb-2">–¢–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏</label>
                    <select
                      value={selectedType}
                      onChange={(e) => setSelectedType(e.target.value)}
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-yellow-400"
                    >
                      {jobTypes.map(type => (
                        <option key={type} value={type}>{type}</option>
                      ))}
                    </select>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </section>

      {/* Jobs List */}
      <section className="py-8 md:py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="flex justify-between items-center mb-8">
            <div>
              <h2 className="text-2xl md:text-3xl font-bold text-white mb-2">
                –ù–∞–π–¥–µ–Ω–æ {filteredJobs.length} –≤–∞–∫–∞–Ω—Å–∏–π
              </h2>
              <p className="text-gray-400">–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏</p>
            </div>
            
            <div className="hidden md:flex items-center space-x-4">
              <span className="text-sm text-gray-400">–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ:</span>
              <select className="px-3 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white text-sm focus:outline-none focus:ring-2 focus:ring-yellow-400">
                <option>–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏</option>
                <option>–î–∞—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</option>
                <option>–ó–∞—Ä–ø–ª–∞—Ç–µ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)</option>
                <option>–ó–∞—Ä–ø–ª–∞—Ç–µ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)</option>
              </select>
            </div>
          </div>

          {/* Jobs Grid */}
          <div className="space-y-6">
            {filteredJobs.map((job) => (
              <div key={job.id} className="bg-white/5 backdrop-blur-sm border border-yellow-400/10 rounded-xl p-4 md:p-6 hover:border-yellow-400/30 transition-all group cursor-pointer">
                <div className="flex flex-col md:flex-row md:items-start gap-4">
                  {/* Company Logo */}
                  <div className="flex-shrink-0">
                    <div className="w-16 h-16 bg-gradient-to-br from-yellow-400/20 to-yellow-600/20 border border-yellow-400/30 rounded-xl flex items-center justify-center text-2xl">
                      {job.logo}
                    </div>
                  </div>

                  {/* Job Info */}
                  <div className="flex-grow min-w-0">
                    <div className="flex flex-col sm:flex-row sm:items-start justify-between gap-4 mb-4">
                      <div className="min-w-0">
                        <div className="flex items-center gap-2 mb-2">
                          <h3 className="text-xl md:text-2xl font-semibold text-white group-hover:text-yellow-400 transition-colors truncate">
                            {job.title}
                          </h3>
                          {job.isHot && (
                            <span className="px-2 py-1 bg-gradient-to-r from-red-500 to-red-600 text-white text-xs font-medium rounded-full">
                              HOT
                            </span>
                          )}
                        </div>
                        
                        <div className="flex items-center gap-4 text-gray-300 mb-3">
                          <span className="flex items-center gap-1">
                            <Building className="w-4 h-4" />
                            {job.company}
                          </span>
                          <span className="flex items-center gap-1">
                            <MapPin className="w-4 h-4" />
                            {job.location}
                          </span>
                          <span className="flex items-center gap-1">
                            <Briefcase className="w-4 h-4" />
                            {job.type}
                          </span>
                        </div>

                        <p className="text-gray-300 text-sm md:text-base mb-4 line-clamp-2">
                          {job.description}
                        </p>

                        <div className="flex flex-wrap gap-2 mb-4">
                          {job.requirements.slice(0, 3).map((req, index) => (
                            <span key={index} className="px-3 py-1 bg-yellow-400/10 border border-yellow-400/20 text-yellow-400 text-xs rounded-full">
                              {req}
                            </span>
                          ))}
                        </div>
                      </div>

                      <div className="text-right flex-shrink-0">
                        <div className="text-2xl font-bold text-yellow-400 mb-2">
                          {job.salary}
                        </div>
                        
                        <div className="flex items-center justify-end gap-4 mb-3 text-sm text-gray-400">
                          <span className="flex items-center gap-1">
                            <Star className="w-4 h-4 text-yellow-400" />
                            {job.rating}
                          </span>
                          <span className="flex items-center gap-1">
                            <Users className="w-4 h-4" />
                            {job.applicants} –æ—Ç–∫–ª–∏–∫–æ–≤
                          </span>
                        </div>

                        <div className="flex items-center justify-end gap-2 text-xs text-gray-500 mb-4">
                          <Clock className="w-3 h-3" />
                          {job.postedDate}
                        </div>

                        <button className="w-full sm:w-auto bg-gradient-to-r from-yellow-400 to-yellow-600 text-black px-6 py-2 rounded-lg font-medium hover:from-yellow-500 hover:to-yellow-700 transition-all">
                          –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                        </button>
                      </div>
                    </div>
                  </div>

                  {/* Arrow */}
                  <div className="flex-shrink-0 hidden md:block">
                    <ChevronRight className="w-6 h-6 text-gray-400 group-hover:text-yellow-400 transition-colors" />
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Load More */}
          <div className="text-center mt-12">
            <button className="bg-white/5 border border-yellow-400/20 text-white px-8 py-3 rounded-lg hover:bg-yellow-400/10 hover:border-yellow-400/40 transition-all">
              –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ –≤–∞–∫–∞–Ω—Å–∏–∏
            </button>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-yellow-400/5 to-yellow-600/5">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            –ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é?
          </h2>
          <p className="text-xl text-gray-300 mb-8">
            –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑—é–º–µ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–∏ —Å–∞–º–∏ –Ω–∞–π–¥—É—Ç –≤–∞—Å!
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button className="bg-gradient-to-r from-yellow-400 to-yellow-600 text-black px-8 py-4 rounded-lg font-medium hover:from-yellow-500 hover:to-yellow-700 transition-all">
              –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ
            </button>
            <button className="border border-yellow-400/40 text-white px-8 py-4 rounded-lg font-medium hover:bg-yellow-400/10 transition-all">
              –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </button>
          </div>
        </div>
      </section>
    </div>
  );
};

export default JobsPage;